volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  {%- if dkcutter.cloudProvider == 'None' %}
  production_django_media: {}
  {%- endif %}
  {%- if dkcutter.useCelery %}
  production_redis_data: {}
  {%- endif %}

services:
  django:{% if dkcutter.useCelery %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
      {%- if dkcutter.frontendPipeline in ["Rspack", "Webpack"] and not dkcutter.useWhitenoise %}
      args:
        # These variable can be defined in an .env file in the root of the repo
        {%- if dkcutter.cloudProvider == "AWS" %}
        DJANGO_AWS_STORAGE_BUCKET_NAME: ${DJANGO_AWS_STORAGE_BUCKET_NAME}
        DJANGO_AWS_S3_CUSTOM_DOMAIN: ${DJANGO_AWS_S3_CUSTOM_DOMAIN}
        {%- elif dkcutter.cloudProvider == "GCP" %}
        DJANGO_GCP_STORAGE_BUCKET_NAME: ${DJANGO_GCP_STORAGE_BUCKET_NAME}
        {%- endif %}
      {%- endif %}
    image: {{ dkcutter.projectSlug }}_production_django
    {%- if dkcutter.cloudProvider == "None" %}
    volumes:
      - production_django_media:/app/{{ dkcutter.projectSlug }}/media
    {%- endif %}
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ dkcutter.projectSlug }}_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: {{ dkcutter.projectSlug }}_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      {%- if dkcutter.useCelery %}
      - "0.0.0.0:5555:5555"
      {%- endif %}

  redis:
    image: docker.io/redis:8
    {%- if dkcutter.useCelery %}
    volumes:
      - production_redis_data:/data
    {%- endif %}
  {%- if dkcutter.useCelery %}

  celeryworker:
    <<: *django
    image: {{ dkcutter.projectSlug }}_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: {{ dkcutter.projectSlug }}_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ dkcutter.projectSlug }}_production_flower
    command: /start-flower
  {%- endif %}
  {%- if dkcutter.cloudProvider == 'AWS' %}

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
  {%- endif %}
  {%- if dkcutter.cloudProvider == 'None' %}

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: {{ dkcutter.projectSlug }}_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
  {%- endif %}
