name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-code:
    name: Check Code - CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
      - name: Install dependencies
        run: pnpm install
      - name: Check code
        run: pnpm check

  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    name: "test ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install Node dependencies
        run: pnpm install
      - name: Install Python dependencies
        run: uv sync --locked
      - name: Run tests
        run: uv run tox

  docker:
    strategy:
      fail-fast: false
      matrix:
        script:
          - name: Basic
            args: ""
          - name: Celery & DRF
            args: --useCelery --restFramework DRF
          - name: Celery & DNRF
            args: --useCelery --restFramework DNRF
          - name: Rspack
            args: --frontendPipeline Rspack
          - name: Rspack with pnpm
            args: --frontendPipeline Rspack --pkgManagerToUse pnpm
          - name: Rspack with yarn
            args: --frontendPipeline Rspack --pkgManagerToUse yarn
          - name: Rspack with bun
            args: --frontendPipeline Rspack --pkgManagerToUse bun
          - name: Rspack with TailwindCSS and Eslint
            args: --frontendPipeline Rspack --additionalTools tailwindcss,eslint
          - name: Rspack with React Email and Eslint
            args: --frontendPipeline Rspack --additionalTools reactemail,eslint
          - name: Rspack with TypeScript, TailwindCSS and Eslint
            args: --frontendPipeline Rspack --frontendPipelineLang ts --additionalTools tailwindcss,eslint
          - name: Webpack
            args: --frontendPipeline Webpack
          - name: Webpack with TailwindCSS and Eslint
            args: --frontendPipeline Webpack --additionalTools tailwindcss,eslint
          - name: Webpack with React Email and Eslint
            args: --frontendPipeline Webpack --additionalTools reactemail,eslint
          - name: Webpack with TypeScript, TailwindCSS and Eslint
            args: --frontendPipeline Webpack --frontendPipelineLang ts --additionalTools tailwindcss,eslint
          - name: React Email
            args: --additionalTools reactemail
          - name: React Email with pnpm
            args: --additionalTools reactemail --pkgManagerToUse pnpm
          - name: React Email with yarn
            args: --additionalTools reactemail --pkgManagerToUse yarn
          - name: React Email with bun
            args: --additionalTools reactemail --pkgManagerToUse bun

    name: "Docker ${{ matrix.script.name }}"
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      - name: Free up disk space (for Yarn builds)
        if: contains(matrix.script.args, 'yarn')
        run: |
          echo "Yarn build detected. Freeing up disk space..."
          df -h
          
          # Remove large pre-installed tools
          sudo rm -rf /usr/local/lib/android
          
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
      - name: Install Node dependencies
        run: pnpm install
      - name: Docker ${{ matrix.script.name }}
        run: sh tests/test_docker.sh ${{ matrix.script.args }}
